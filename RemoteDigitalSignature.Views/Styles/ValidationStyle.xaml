<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:behaviors="clr-namespace:RemoteDigitalSignature.Views.Behaviors">
    <!-- Не используется -->
    <ControlTemplate x:Key="ErrorTemplate" TargetType="{x:Type Control}">
        <Grid>
            <Border Background="#11FF0000" BorderBrush="#FFFF0000" BorderThickness="1" IsHitTestVisible="True"/>
            <Polygon 
                    Fill="#FFFF0000" 
                    Margin="0,2,2,0"
                    Points="10,5 10,0 5,0"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Right">
                <Polygon.ToolTip>
                    <ToolTip>
                        <ToolTip.Content>
                            <Border BorderBrush="Red" BorderThickness="1,1,1,1" CornerRadius="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="Red" Offset="0"/>
                                        <GradientStop Color="Red" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.Effect>
                                    <DropShadowEffect Color="DarkRed" />
                                </Border.Effect>
                                <Grid Opacity="0.93" Background="Red">
                                    <ItemsControl ItemsSource="{Binding}"
                                                      BorderThickness="1"
                                                      Foreground="White"
                                                      Background="Red">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding ErrorContent}" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </Border>
                        </ToolTip.Content>
                    </ToolTip>
                </Polygon.ToolTip>
            </Polygon>
            <AdornedElementPlaceholder x:Name="adorner"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ToolTipTemplate" TargetType="ToolTip">
        <Grid Opacity="0.93">
            <Border BorderBrush="Red" BorderThickness="1,1,1,1" CornerRadius="2">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Red" Offset="0"/>
                        <GradientStop Color="Red" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border.Effect>
                    <DropShadowEffect Color="DarkRed" />
                </Border.Effect>
                <ItemsControl ItemsSource="{Binding}" Margin="3">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=ErrorContent, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTemplateOld">
        <Grid SnapsToDevicePixels="True">
            <Border BorderBrush="#ff3333" BorderThickness="1.5" IsHitTestVisible="False" SnapsToDevicePixels="True"/>
            <Polygon Fill="#ff3333" SnapsToDevicePixels="True"
                     Margin="0,1,1,0"
                     StrokeThickness="1.25"
                     Points="11,6 11,0 5,0"
                     VerticalAlignment="Top"
                     HorizontalAlignment="Right" ToolTipService.ShowDuration="1000">
                <Polygon.ToolTip>
                    <ToolTip Content="{Binding Path=ErrorContent, UpdateSourceTrigger=PropertyChanged}" Template="{StaticResource ToolTipTemplate}"
                                  Foreground="White"
                                  Background="#ff3333" >
                    </ToolTip>
                </Polygon.ToolTip>
            </Polygon>
            <AdornedElementPlaceholder x:Name="Adorner" />
        </Grid>
    </ControlTemplate>

    <!-- Шаблон валидации С1DataGrid -->
    <!--<Style TargetType="c1:C1ValidationDecorator">
        <Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="CornerRadius" Value="1" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        --><!--<Setter Property="IsHitTestVisible" Value="False" />--><!--
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1:C1ValidationDecorator">
                    <Border  x:Name="ValidationErrorElement" Visibility="Hidden" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Polygon Fill="Red"
                                     Margin="0,0,0,0"
                                     Points="10,5 10,0 5,0"
                                     VerticalAlignment="Top"
                                     HorizontalAlignment="Right">
                            <Polygon.ToolTip>
                                <ToolTip Content="{Binding Path=ErrorContent, UpdateSourceTrigger=PropertyChanged}" Template="{StaticResource ToolTipTemplate}"
                                             Foreground="White"
                                             Background="Red" >
                                </ToolTip>
                            </Polygon.ToolTip>
                        </Polygon>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


 <ControlTemplate x:Key="ValidationTemplate">
    <StackPanel Orientation="Horizontal">
      <!-- Defines TextBox outline border and the ToolTipCorner -->
      <Border x:Name="border" BorderBrush="#ff3333" BorderThickness="1.5" Padding="0" SnapsToDevicePixels="True">
        <Grid Margin="-1">
          <Polygon x:Name="toolTipCorner"
                   Grid.ZIndex="2"
                   Margin="-1"
                   Points="9,9 9,0 0,0"
                   Fill="#ff3333"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Top"
                   IsHitTestVisible="True"/>
          <Polyline Grid.ZIndex="3"
                    Points="10,10 0,0"
                    Margin="-1"
                    HorizontalAlignment="Right"
                    StrokeThickness="1.5"
                    StrokeEndLineCap="Round"
                    StrokeStartLineCap="Round"
                    Stroke="White"
                    VerticalAlignment="Top"
                    IsHitTestVisible="True"/>
          <AdornedElementPlaceholder x:Name="Adorner"/>
        </Grid>
      </Border>
      <!-- Defines the Popup -->
      <Popup x:Name="placard"
             AllowsTransparency="True"
             PopupAnimation="Fade"
             Placement="Top"
             PlacementTarget="{Binding ElementName=toolTipCorner}"
             PlacementRectangle="12,-1,0,0">
        <!-- Used to reposition Popup when dialog moves or resizes -->
        <b:Interaction.Behaviors>
          <behaviors:RepositionPopupBehavior/>
        </b:Interaction.Behaviors>
        <Popup.Style>
          <Style TargetType="{x:Type Popup}">
            <Style.Triggers>
              <!-- Shows Popup when TextBox has focus -->
              <DataTrigger Binding="{Binding ElementName=Adorner, Path=AdornedElement.IsKeyboardFocusWithin}"
                           Value="True">
                <Setter Property="IsOpen" Value="True"/>
              </DataTrigger>
              <!-- Shows Popup when mouse hovers over ToolTipCorner -->
              <DataTrigger Binding="{Binding ElementName=toolTipCorner, Path=IsMouseOver}"
                           Value="True">
                <Setter Property="IsOpen" Value="True"/>
              </DataTrigger>
              <!-- Hides Popup when window is no longer active -->
              <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}"
                           Value="False">
                <Setter Property="IsOpen" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Popup.Style>
        <Border x:Name="errorBorder"
                Background="#ef3333"
                Margin="0,0,8,8"
                Opacity="1"
                CornerRadius="2"
                IsHitTestVisible="False"
                MinHeight="24" MaxWidth="250">
          <Border.Effect>
            <DropShadowEffect ShadowDepth="2"
                              Color="DarkRed"
                              Opacity="0.6"
                              Direction="315"
                              BlurRadius="4"/>
          </Border.Effect>
            <Border Margin="2" BorderBrush="White" BorderThickness="1">
            <ItemsControl ItemsSource="{Binding}" Margin="3">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=ErrorContent, UpdateSourceTrigger=PropertyChanged}"  
                                   Foreground="White"
                                   Margin="8,0,8,0"
                                   TextWrapping="Wrap"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            </Border>
            <!--<TextBlock Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}"
                       Foreground="White"
                       Margin="8,3,8,3"
                       TextWrapping="Wrap"/>-->
        </Border>
      </Popup>
    </StackPanel>
  </ControlTemplate>

</ResourceDictionary>